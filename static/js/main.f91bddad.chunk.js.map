{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handlePressedKey","event","code","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,iBAAmB,SAACC,GACC,UAAfA,EAAMC,KACR,EAAKC,SAAS,CAAEJ,WAAYE,EAAMC,OAElC,EAAKC,SAAS,CAAEJ,WAAYE,EAAMG,OAjBxC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,oBAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,oBAV/C,oBAqBE,WACE,IAAQD,EAAeQ,KAAKT,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGV,EAAU,mCACqBA,EADrB,KAEP,kCA7Bd,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.f91bddad.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\ninterface State {\n  pressedKey: string,\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlePressedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlePressedKey);\n  }\n\n  handlePressedKey = (event: KeyboardEvent) => {\n    if (event.code === 'Space') {\n      this.setState({ pressedKey: event.code });\n    } else {\n      this.setState({ pressedKey: event.key });\n    }\n  };\n\n  render(): React.ReactNode {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}